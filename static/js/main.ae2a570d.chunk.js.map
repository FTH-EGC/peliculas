{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","assets/img/imdb-logo.svg","assets/img/Metacritic.svg","assets/img/rotten-tomatoes.svg","components/Iconos.js","assets/img/trophy.svg","components/InformacionPelicula.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Error","mensaje","Formulario","pelicula","guardarPelicula","guardarConsultar","noexiste","useState","error","guardarError","titulo","trama","onChange","e","target","name","value","action","onSubmit","preventDefault","trim","htmlFor","type","placeholder","Iconos","imagen","rating","Source","Value","IMDb","Rotten","MetaCritic","src","alt","InformacionPelicula","busqueda","Title","Country","Director","Genre","Language","Plot","Poster","Production","Ratings","Runtime","Type","Year","Actors","Awards","Trophy","map","App","year","guardarBusqueda","consulta","guardarNoExiste","useEffect","a","url","fetch","respuesta","json","resultado","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae2a570d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <div className=\"header\">\r\n            <h1> IMDB - Peliculas</h1>\r\n        </div>\r\n\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <div className=\"error\">\r\n            <p>{mensaje}</p>\r\n        </div>\r\n\r\n      );\r\n}\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({pelicula, guardarPelicula,guardarConsultar, noexiste}) => {\r\n\r\n\r\n    const [error, guardarError] = useState(false);\r\n    const {titulo, trama} = pelicula;\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n\r\n        if(titulo.trim() === \"\" || trama.trim() === \"\"){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n        guardarConsultar(true);\r\n\r\n    }\r\n\r\n\r\n\r\n    const onChange = e => {\r\n        guardarPelicula({\r\n            ...pelicula,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    return ( \r\n\r\n        <form action=\"\"\r\n        className=\"formulario\"\r\n        onSubmit={onSubmit}\r\n        >\r\n            {error ? <Error mensaje=\"Los campos Titulo y Trama son obligatorios\" /> : null}\r\n            {noexiste ? \r\n                <Error mensaje=\"Pelicula no encontrada, intente nuevamente\" />\r\n                :\r\n                null\r\n            }\r\n        <label htmlFor=\"titulo\">Titulo de la pelicula:</label>\r\n        <input\r\n            type=\"text\"\r\n            name=\"titulo\"\r\n            className=\"inputs\"\r\n            placeholder=\"Ej. Guardians of the Galaxy Vol. 2\"\r\n            onChange={onChange}\r\n        />\r\n        <label htmlFor=\"year\">Año:</label>\r\n        <input\r\n            type=\"text\"\r\n            name=\"year\"\r\n            className=\"inputs\"\r\n            placeholder=\"Ej. 2017\"\r\n            onChange={onChange}\r\n        />\r\n        <label htmlFor=\"trama\">Trama:</label>\r\n        <select \r\n            name=\"trama\"\r\n            className=\"inputs\"\r\n            onChange={onChange}\r\n        >\r\n            <option value=\"!#\">--Seleccione--</option>\r\n            <option value=\"short\">Pequeña</option>\r\n            <option value=\"full\">Completa</option>\r\n        </select>\r\n\r\n        <input \r\n            type=\"submit\"\r\n            value=\"Buscar\"\r\n            className=\"boton\"\r\n        />\r\n        </form>\r\n\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    pelicula: PropTypes.object.isRequired,\r\n    guardarPelicula: PropTypes.func.isRequired,\r\n    guardarConsultar: PropTypes.func.isRequired,\r\n    noexiste: PropTypes.bool.isRequired\r\n}\r\n \r\nexport default Formulario;","export default __webpack_public_path__ + \"static/media/imdb-logo.290115c3.svg\";","export default __webpack_public_path__ + \"static/media/Metacritic.dd75e2f3.svg\";","export default __webpack_public_path__ + \"static/media/rotten-tomatoes.2936e952.svg\";","import React from 'react';\r\nimport IMDb from '../assets/img/imdb-logo.svg';\r\nimport MetaCritic from '../assets/img/Metacritic.svg';\r\nimport Rotten from '../assets/img/rotten-tomatoes.svg';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\nconst Iconos = ({rating}) => {\r\n\r\n    const {Source, Value} = rating;\r\n\r\n    let imagen;\r\n    switch(Source){\r\n        case 'Internet Movie Database':\r\n             imagen = IMDb;\r\n            break;\r\n        case 'Rotten Tomatoes':\r\n             imagen = Rotten;\r\n        break;\r\n        case 'Metacritic':\r\n             imagen = MetaCritic;\r\n        break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return ( \r\n\r\n            <div className=\"icono\">\r\n                <img src={imagen} alt=\"Imagen Iconos\"/>\r\n                <p>{Value}</p>\r\n            </div>\r\n\r\n     );\r\n}\r\n \r\nIconos.propTypes = {\r\n    rating: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Iconos;","export default __webpack_public_path__ + \"static/media/trophy.d6a07d1b.svg\";","import React from 'react';\r\nimport Iconos from './Iconos';\r\nimport Trophy from '../assets/img/trophy.svg';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst InformacionPelicula = ({busqueda}) => {\r\n\r\n    const {Title, Country, Director, Genre, Language, Plot, Poster, Production, Ratings, Runtime, Type, Year, Actors,  Awards} = busqueda;\r\n\r\n    if(!Title) return null;\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"info-peliculas\">\r\n        <h2>{Title}</h2>\r\n            <div className=\"secciones\">\r\n                <div className=\"poster\">\r\n                    <img src={Poster} alt=\"Imagen Pelicula\"/>\r\n                    <div className=\"card\">\r\n                        <p>Año: <span>{Year}</span></p>\r\n                        <p>Duración: <span>{Runtime}</span></p>\r\n                        <p>Género: <span>{Genre}</span></p>\r\n                        <p>Tipo: <span>{Type}</span></p>\r\n                        <p>Director: <span>{Director}</span></p>\r\n                        <p>Actores: <span>{Actors}</span></p>\r\n                        <p>País: <span>{Country}</span></p>\r\n                        <p>Idioma: <span>{Language}</span></p>\r\n                        <p>Producción: <span>{Production}</span></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"informacion\">\r\n\r\n                    <div className=\"info\">\r\n                        <h2>Trama:</h2>\r\n                        <p>{Plot}</p>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <h2>Premios y Nominaciones:</h2>\r\n                        <div className=\"premio\">\r\n                            <img src={Trophy} alt=\"Imagen Trofeo\"/>\r\n                            <p>{Awards}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <h2>Ratings:</h2>\r\n                        <div className=\"iconos\">\r\n                        {Ratings.map(rating => (\r\n                            <Iconos\r\n                                key={rating.Source}\r\n                                rating={rating}\r\n                            />\r\n                        ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nInformacionPelicula.propTypes = {\r\n    busqueda: PropTypes.object.isRequired\r\n}\r\n \r\nexport default InformacionPelicula;","import React, {Fragment, useState, useEffect} from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport InformacionPelicula from './components/InformacionPelicula';\n\n\nfunction App() {\n\n\n  const [pelicula, guardarPelicula] = useState({\n    titulo: '',\n    year: '',\n    trama: ''\n  });\n\n  const [busqueda, guardarBusqueda] = useState({});\n  const {titulo, year, trama} = pelicula;\n  const [consulta, guardarConsultar] = useState(false);\n  const [noexiste, guardarNoExiste] = useState(false);\n\n\n  useEffect(() => {\n\n    if(consulta){\n      const consultarAPI = async () => {\n        const url = `https://www.omdbapi.com/?t=${titulo}&y=${year}&plot=${trama}&apikey=3aefd129`;\n  \n        const respuesta = await fetch(url);\n        const resultado = await respuesta.json();\n  \n        guardarBusqueda(resultado);\n        if(resultado.Error === \"Movie not found!\"){\n          guardarNoExiste(true);\n\n        }else{\n          guardarNoExiste(false);\n        }\n        \n        guardarConsultar(false);\n  \n      }\n      consultarAPI();\n    }\n\n\n\n  }, [consulta, titulo, year, trama])\n\n\n  return (\n    <Fragment>\n\n\n    <Header />\n    <div className=\"contenedor\">\n      <div className=\"contenido\">\n        <Formulario \n          pelicula={pelicula}\n          guardarPelicula={guardarPelicula}\n          guardarConsultar={guardarConsultar}\n          noexiste={noexiste}\n        />\n\n        <InformacionPelicula\n          busqueda={busqueda}\n        />\n\n      </div>\n    </div>\n\n    </Fragment>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}